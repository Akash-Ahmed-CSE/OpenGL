#include <windows.h>
#include <GL/gl.h>
#include <GL/glut.h>

void tree(float position)
{
float b=0,c=0,d=0;

for(int i =0; i<=6;i++){
          glBegin(GL_TRIANGLES); //Begin quad coordinates
      //Triangle
      glColor3f(0.0, 0.6, 0.0);

      glVertex3f(0.3f+position, 0.75f+b, 0.0f);
      glVertex3f(0.36f+c+position, 0.7f+d, 0.0f);
      glVertex3f(0.24f+b+position, 0.7f+d, 0.0f);
      glEnd();//End quad coordinates
    b-=0.02;
    c+=0.02;
    d-=0.04;
}
      glBegin(GL_QUADS); // Root
      //Square
      glColor3f(0.6, 0.3, 0.3);
      glVertex3f(0.28f+position, 0.46f, 0.0f);
      glVertex3f(0.32f+position, 0.46f, 0.0f);
      glVertex3f(0.32f+position, 0.36f, 0.0f);
      glVertex3f(0.28f+position, 0.36f, 0.0f);
      glEnd();//End quad coordinates
}


void Stree(float positionx,float positiony,float color)
{
float b=0,c=0,d=0;

for(int i =0; i<=6;i++){
          glBegin(GL_TRIANGLES); //Begin quad coordinates
      //Triangle
      glColor3f(0.0, 0.3+color, 0.0);

      glVertex3f(0.3f+positionx, 0.75f+b+positiony, 0.0f);
      glVertex3f(0.36f+c+positionx, 0.7f+d+positiony, 0.0f);
      glVertex3f(0.24f+b+positionx, 0.7f+d+positiony, 0.0f);
      glEnd();//End quad coordinates
    b-=0.02;
    c+=0.02;
    d-=0.04;
}
      glBegin(GL_QUADS); // Root
      //Square
      glColor3f(0.6, 0.3, 0.3);
      glVertex3f(0.28f+positionx, 0.46f+positiony, 0.0f);
      glVertex3f(0.32f+positionx, 0.46f+positiony, 0.0f);
      glVertex3f(0.32f+positionx, 0.36f+positiony, 0.0f);
      glVertex3f(0.28f+positionx, 0.36f+positiony, 0.0f);
      glEnd();//End quad coordinates
}

void display(void)
{

    glClear (GL_COLOR_BUFFER_BIT);
    glColor3f (1.0, 0.0, 0.0);

      glBegin(GL_QUADS); // Sky
      //Square
      glColor3f(0.0, 0.7, 0.9);
      glVertex3f(0.0f, 0.6f, 0.0f);
      glColor3f(0.0, 0.0, 0.9);
      glVertex3f(0.0f, 1.0f, 0.0f);
      glColor3f(0.0, 0.0, 0.9);
      glVertex3f(1.0f, 1.0f, 0.6f);
      glColor3f(0.0, 0.7, 0.9);
      glVertex3f(1.0f, 0.6f, 0.0f);
      glEnd();//End quad coordinates


      glBegin(GL_QUADS); // Earth
      //Square
      glColor3f(0.0, 0.4, 0.0);
      glVertex3f(0.0f, 0.6f, 0.0f);
      glColor3f(0.0, 0.4, 0.0);
      glVertex3f(1.0f, 0.6f, 0.0f);
      glColor3f(0.0, 0.8, 0.0);
      glVertex3f(1.0f, 0.0f, 0.0f);
      glColor3f(0.0, 0.8, 0.0);
      glVertex3f(0.0f, 0.0f, 0.0f);
      glEnd();//End quad coordinates

        //Calling tree funtions
        Stree(-0.1,0.05,0.0); // position x,y and color of the free
        Stree(0.2,0.05,0.0);
        Stree(0.5,0.05,0.0);
        tree(0.0);
        tree(0.4);
        Stree(-0.2,-0.05,0.2);
        Stree(0.2,-0.05,0.2);
        Stree(0.6,-0.05,0.2);
   glFlush ();
}
void init (void)
{
    glClearColor (0.0, 0.0, 0.0, 0.0); //select clearing (background) color
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0.0, 1.0, 0.0, 1.0, -10.0, 10.0);
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize (600, 600);
    glutInitWindowPosition (100, 100);
    glutCreateWindow ("Tree");
    init ();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
